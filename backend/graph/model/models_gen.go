// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"time"
)

type Album struct {
	AlbumType            string              `json:"album_type" bson:"album_type"`
	TotalTracks          int                 `json:"total_tracks" bson:"total_tracks"`
	AvailableMarkets     []string            `json:"available_markets" bson:"available_markets"`
	ExternalUrls         *ExternalUrls       `json:"external_urls" bson:"external_urls"`
	Href                 string              `json:"href" bson:"href"`
	ID                   string              `json:"id" bson:"_id"`
	Images               []*Image            `json:"images" bson:"images"`
	Name                 string              `json:"name" bson:"name"`
	ReleaseDate          string              `json:"release_date" bson:"release_date"`
	ReleaseDatePrecision string              `json:"release_date_precision" bson:"release_date_precision"`
	Type                 string              `json:"type" bson:"type"`
	URI                  string              `json:"uri" bson:"uri"`
	Artists              []*SimplifiedArtist `json:"artists" bson:"artists"`
	Tracks               *Tracks             `json:"tracks" bson:"tracks"`
}

type Albums struct {
	Href     string   `json:"href" bson:"href"`
	Limit    int      `json:"limit" bson:"limit"`
	Next     string   `json:"next" bson:"next"`
	Offset   int      `json:"offset" bson:"offset"`
	Previous string   `json:"previous" bson:"previous"`
	Total    int      `json:"total" bson:"total"`
	Items    []*Album `json:"items" bson:"items"`
}

type Comment struct {
	ID        *string       `json:"_id,omitempty" bson:"_id,omitempty"`
	ReviewID  *string       `json:"reviewId,omitempty" bson:"reviewId,omitempty"`
	UserID    *string       `json:"userId,omitempty" bson:"userId,omitempty"`
	User      *UserResponse `json:"user,omitempty" bson:"user,omitempty"`
	Text      *string       `json:"text,omitempty" bson:"text,omitempty"`
	CreatedAt *time.Time    `json:"createdAt,omitempty" bson:"createdAt,omitempty"`
	UpdatedAt *time.Time    `json:"updatedAt,omitempty" bson:"updatedAt,omitempty"`
}

type ExplicitContent struct {
	FilterEnabled bool `json:"filterEnabled" bson:"filterEnabled"`
	FilterLocked  bool `json:"filterLocked" bson:"filterLocked"`
}

type ExternalUrls struct {
	Spotify string `json:"spotify" bson:"spotify"`
}

type FavouriteAlbumEntry struct {
	Key   int          `json:"key" bson:"key"`
	Album *ReviewAlbum `json:"album,omitempty" bson:"album,omitempty"`
}

type FavouriteAlbumEntryInput struct {
	Key     int    `json:"key" bson:"key"`
	AlbumID string `json:"albumId" bson:"albumId"`
}

type Followers struct {
	Href  *string `json:"href,omitempty" bson:"href,omitempty"`
	Total int     `json:"total" bson:"total"`
}

type Image struct {
	URL    string `json:"url" bson:"url"`
	Height *int   `json:"height,omitempty" bson:"height,omitempty"`
	Width  *int   `json:"width,omitempty" bson:"width,omitempty"`
}

type Mutation struct {
}

type Query struct {
}

type ReportedComment struct {
	ID             *string       `json:"_id,omitempty" bson:"_id,omitempty"`
	CommentID      string        `json:"commentId" bson:"commentId"`
	Comment        *Comment      `json:"comment,omitempty" bson:"comment,omitempty"`
	ReportedBy     string        `json:"reportedBy" bson:"reportedBy"`
	ReportedByUser *UserResponse `json:"reportedByUser,omitempty" bson:"reportedByUser,omitempty"`
	Status         string        `json:"status" bson:"status"`
	CreatedAt      time.Time     `json:"createdAt" bson:"createdAt"`
	ResolvedAt     *time.Time    `json:"resolvedAt,omitempty" bson:"resolvedAt,omitempty"`
	ModeratorID    *string       `json:"moderatorId,omitempty" bson:"moderatorId,omitempty"`
	ModeratorNotes *string       `json:"moderatorNotes,omitempty" bson:"moderatorNotes,omitempty"`
}

type Review struct {
	ID          *string      `json:"_id,omitempty" bson:"_id,omitempty"`
	Value       int          `json:"value" bson:"value"`
	ItemID      string       `json:"itemId" bson:"itemId"`
	ItemType    string       `json:"itemType" bson:"itemType"`
	Title       string       `json:"title" bson:"title"`
	Description string       `json:"description" bson:"description"`
	UserID      string       `json:"userId" bson:"userId"`
	Comments    []*Comment   `json:"comments,omitempty" bson:"comments,omitempty"`
	Album       *ReviewAlbum `json:"album,omitempty" bson:"album,omitempty"`
}

type ReviewAlbum struct {
	AlbumID string              `json:"albumId" bson:"albumId"`
	Name    string              `json:"name" bson:"name"`
	Images  []*Image            `json:"images" bson:"images"`
	Artists []*SimplifiedArtist `json:"artists" bson:"artists"`
}

type SearchResponse struct {
	Tracks *Tracks `json:"tracks,omitempty" bson:"tracks,omitempty"`
	Albums *Albums `json:"albums,omitempty" bson:"albums,omitempty"`
}

type SimplifiedArtist struct {
	ExternalUrls *ExternalUrls `json:"external_urls" bson:"external_urls"`
	Href         string        `json:"href" bson:"href"`
	ID           string        `json:"id" bson:"_id"`
	Name         string        `json:"name" bson:"name"`
	Type         string        `json:"type" bson:"type"`
	URI          string        `json:"uri" bson:"uri"`
}

type Tokens struct {
	AccessToken  *string `json:"AccessToken,omitempty" bson:"AccessToken,omitempty"`
	TokenType    *string `json:"TokenType,omitempty" bson:"TokenType,omitempty"`
	Scope        *string `json:"Scope,omitempty" bson:"Scope,omitempty"`
	ExpiresIn    *int    `json:"ExpiresIn,omitempty" bson:"ExpiresIn,omitempty"`
	RefreshToken *string `json:"RefreshToken,omitempty" bson:"RefreshToken,omitempty"`
}

type Track struct {
	Album            *Album              `json:"album" bson:"album"`
	Artists          []*SimplifiedArtist `json:"artists" bson:"artists"`
	AvailableMarkets []string            `json:"available_markets" bson:"available_markets"`
	DiscNumber       int                 `json:"disc_number" bson:"disc_number"`
	DurationMs       int                 `json:"duration_ms" bson:"duration_ms"`
	Explicit         bool                `json:"explicit" bson:"explicit"`
	ExternalUrls     *ExternalUrls       `json:"external_urls" bson:"external_urls"`
	Href             string              `json:"href" bson:"href"`
	ID               string              `json:"id" bson:"_id"`
	IsPlayable       bool                `json:"is_playable" bson:"is_playable"`
	Name             string              `json:"name" bson:"name"`
	Popularity       int                 `json:"popularity" bson:"popularity"`
	PreviewURL       *string             `json:"preview_url,omitempty" bson:"preview_url,omitempty"`
	TrackNumber      int                 `json:"track_number" bson:"track_number"`
	Type             string              `json:"type" bson:"type"`
	URI              string              `json:"uri" bson:"uri"`
	IsLocal          bool                `json:"is_local" bson:"is_local"`
}

type Tracks struct {
	Href     *string  `json:"href,omitempty" bson:"href,omitempty"`
	Limit    *int     `json:"limit,omitempty" bson:"limit,omitempty"`
	Next     *string  `json:"next,omitempty" bson:"next,omitempty"`
	Offset   int      `json:"offset" bson:"offset"`
	Previous string   `json:"previous" bson:"previous"`
	Total    int      `json:"total" bson:"total"`
	Items    []*Track `json:"items" bson:"items"`
}

type User struct {
	ID              *string                `json:"_id,omitempty" bson:"_id,omitempty"`
	Country         string                 `json:"country" bson:"country"`
	DisplayName     string                 `json:"displayName" bson:"displayName"`
	Email           string                 `json:"email" bson:"email"`
	ExplicitContent *ExplicitContent       `json:"explicitContent" bson:"explicitContent"`
	ExternalUrls    *ExternalUrls          `json:"externalUrls" bson:"externalUrls"`
	Followers       *Followers             `json:"followers" bson:"followers"`
	Href            string                 `json:"href" bson:"href"`
	SpotifyID       string                 `json:"spotifyId" bson:"spotifyId"`
	Images          []*Image               `json:"images" bson:"images"`
	Product         string                 `json:"product" bson:"product"`
	Type            string                 `json:"type" bson:"type"`
	URI             string                 `json:"uri" bson:"uri"`
	Tokens          *Tokens                `json:"tokens,omitempty" bson:"tokens,omitempty"`
	Role            string                 `json:"role" bson:"role"`
	FavouriteAlbums []*FavouriteAlbumEntry `json:"favouriteAlbums" bson:"favouriteAlbums"`
}

type UserResponse struct {
	ID              string                 `json:"_id" bson:"_id"`
	Country         string                 `json:"country" bson:"country"`
	DisplayName     string                 `json:"displayName" bson:"displayName"`
	Email           string                 `json:"email" bson:"email"`
	ExplicitContent *ExplicitContent       `json:"explicitContent" bson:"explicitContent"`
	ExternalUrls    *ExternalUrls          `json:"externalUrls" bson:"externalUrls"`
	Followers       *Followers             `json:"followers" bson:"followers"`
	Href            string                 `json:"href" bson:"href"`
	SpotifyID       string                 `json:"spotifyId" bson:"spotifyId"`
	Images          []*Image               `json:"images" bson:"images"`
	Product         string                 `json:"product" bson:"product"`
	Type            string                 `json:"type" bson:"type"`
	URI             string                 `json:"uri" bson:"uri"`
	Role            string                 `json:"role" bson:"role"`
	FavouriteAlbums []*FavouriteAlbumEntry `json:"favouriteAlbums" bson:"favouriteAlbums"`
}
