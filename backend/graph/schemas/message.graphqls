type Chat {
  _id: ID!
  name: String
  participantsIds: [ID!]!
  participants: [UserResponse!]!
  participantId: ID!
  participant: UserResponse!
  messages: [Message!]!
  createdAt: Time!
}

type Message {
  _id: ID!
  content: String!
  senderId: ID!
  sender: UserResponse
  createdAt: Time!
}

type MessagesPage {
  totalMessages: Int!
  totalPages: Int!
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  messages: [Message!]!
}


extend type Query {
  chat(participantId: ID!): Chat!
  messagesPage(chatId: ID!, pageSize: Int, page: Int!): MessagesPage!
}

extend type Mutation {
  # TODO this might be used for group chats in the future
  # createChat(name: String, participantIds: [ID!]!): Chat!
  sendMessage(chatId: ID!, content: String!): Message!
}

extend type Subscription {
  messageAdded(chatId: ID!): Message!
}
