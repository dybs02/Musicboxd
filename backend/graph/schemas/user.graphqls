type User {
  _id: ID
  country: String!
  displayName: String!
  email: String!
  explicitContent: ExplicitContent!
  externalUrls: ExternalUrls!
  followers: Followers!
  href: String!
  spotifyId: String!
  images: [Image!]!
  product: String!
  type: String!
  uri: String!
  tokens: Tokens
  role: String!
}

type ExplicitContent {
  filterEnabled: Boolean!
  filterLocked: Boolean!
}

type ExternalUrls {
  spotify: String!
}

type Followers {
  href: String
  total: Int!
}

type Image {
  url: String!
  height: Int
  width: Int
}

type Tokens {
  AccessToken: String
  TokenType: String
  Scope: String
  ExpiresIn: Int
  RefreshToken: String
}


type UserResponse {
  _id: ID!
  country: String!
  displayName: String!
  email: String!
  explicitContent: ExplicitContent!
  externalUrls: ExternalUrls!
  followers: Followers!
  href: String!
  spotifyId: String!
  images: [Image!]!
  product: String!
  type: String!
  uri: String!
  role: String!
}

extend type Query {
  userByDisplayName(displayName: String!): UserResponse
  userById(id: String!): UserResponse
}

extend type Mutation {
  updateCurrentUser(displayName: String): UserResponse
}